generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id                      String                    @id @default(cuid())
  name                    String
  phone                   String
  email                   String?
  cpf                     String                    @unique
  rg                      String?
  expeditor_rg            String?
  occupation              String?
  cnh_number              String?
  cnh_uf                  String?
  civil_state             String?
  createdAt               DateTime                  @default(now())
  updatedAt               DateTime                  @updatedAt
  Address                 Address[]
  Transaction             Transaction[]
  solicitationTransaction SolicitationTransaction[]
  Solicitation            Solicitation[]
  User                    User[]
}

model User {
  id         String    @id @default(cuid())
  first_name String
  last_name  String
  email      String    @unique
  cpf        String    @unique
  password   String
  customer   Customer? @relation(fields: [customerId], references: [id])
  customerId String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Address {
  id           String   @id @default(cuid())
  street       String
  number       String
  city         String
  state        String
  zip_code     String
  neighborhood String
  complement   String
  customer     Customer @relation(fields: [customerId], references: [id])
  customerId   String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Solicitation {
  id                      String                    @id @default(cuid())
  code                    Int                       @unique @default(autoincrement())
  status                  String
  customer                Customer                  @relation(fields: [customerId], references: [id])
  customerId              String
  amount_payment          Float
  vehicle_owner           String?
  createdAt               DateTime                  @default(now())
  updatedAt               DateTime                  @updatedAt
  solicitationTransaction SolicitationTransaction[]
  Inflations              Inflations[]
  SolicitationDocument    SolicitationDocument[]
}

model Inflations {
  id               String       @id @default(cuid())
  description      String
  simple_amount    Float
  especial_amount  Float
  inflation_amount Float
  payment_amount   Float
  type_selected    String
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
  solicitation     Solicitation @relation(fields: [solicitationId], references: [id])
  solicitationId   String
}

model Transaction {
  id                      String                    @id @default(cuid())
  externalId              String
  amount                  Float
  status                  String
  success                 Boolean
  acquirer_message        String
  acquirer_return_code    String
  operation_type          String
  card_first_six_digits   String
  card_last_four_digits   String
  card_brand              String
  card_holder_name        String
  transaction_type        String
  closed                  Boolean
  customer                Customer                  @relation(fields: [customerId], references: [id])
  customerId              String
  createdAt               DateTime                  @default(now())
  updatedAt               DateTime                  @updatedAt
  solicitationTransaction SolicitationTransaction[]
}

model SolicitationTransaction {
  id             String       @id @default(cuid())
  customer       Customer     @relation(fields: [customerId], references: [id])
  customerId     String
  transaction    Transaction? @relation(fields: [transactionId], references: [id])
  transactionId  String?
  solicitation   Solicitation @relation(fields: [solicitationId], references: [id])
  solicitationId String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model SolicitationDocument {
  id             String       @id @default(cuid())
  solicitation   Solicitation @relation(fields: [solicitationId], references: [id])
  solicitationId String
  fileName       String
  originalName   String
  encoding       String
  mimetype       String
  size           Int
  buffer         Bytes
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}
